x-default-opts: &default-opts
  env_file:
    .env
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://172.17.0.1:12201"
 
services:
  nextcloud:
    <<: *default-opts
    image: nextcloud:${NEXTCLOUD_TAG}
    volumes:
      - nextcloud_storage:/var/www/html/data
      - nextcloud_data:/var/www/html
    secrets:
      - nextcloud_admin_user
      - nextcloud_admin_password
      - mariadb_db_database
      - mariadb_db_user
      - mariadb_db_password
    environment:
      - MYSQL_DATABASE_FILE=/run/secrets/mariadb_db_database
      - MYSQL_USER_FILE=/run/secrets/mariadb_db_user
      - MYSQL_PASSWORD_FILE=/run/secrets/mariadb_db_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
    networks:
      - mariadb_network
      - proxy_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "true"
        traefik.http.routers.nextcloud.entrypoints: ${ENTRYPOINT:-websecure}
        traefik.http.routers.nextcloud.rule: Host(`${DOMAIN?Variable not set}`)
        traefik.http.routers.nextcloud.service: nextcloud
        traefik.http.services.nextcloud.loadbalancer.server.port: 80
        traefik.http.middlewares.nextcloud-redirectregex.redirectregex.regex: (http|https)://(.*)/.well-known/(card|cal)dav
        traefik.http.middlewares.nextcloud-redirectregex.redirectregex.replacement: $${1}://$${2}/remote.php/dav/
        traefik.http.middlewares.nextcloud-redirectregex.redirectregex.permanent: "true"
        traefik.http.routers.nextcloud.middlewares: nextcloud-redirectregex

  backup:
    <<: *default-opts
    image: alpine:latest
    volumes:
      - nextcloud_storage:/var/www/html/data
      - nextcloud_data:/var/www/html
      - nextcloud_backup:/backup
    command:
      - sh
      - -c
      - | 
        SECS=$$(expr `date -d "01:00" +%s` + 86400 - `date +%s`);
        echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Backup service started. First backup will be executed at 1 AM.";
        sleep $$SECS
        while true; do
          root_dir=/var/www/html;
          backup_dir=/backup;
          mkdir -p $$backup_dir;
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Creating backup of Nextcloud data...";
          sed -i -E "s/(\"|')maintenance(\"|')[ \t]*?=>[ \t]*?false,/'maintenance' => true,/g" $$root_dir/config/config.php;
          sleep 30s;
          tar -C $$root_dir -cvzf $$backup_dir/nc_data_backup_$$(date +'%Y%m%d_%H%M%S').tar.gz .;
          sed -i -E "s/(\"|')maintenance(\"|')[ \t]*?=>[ \t]*?true,/'maintenance' => false,/g" $$root_dir/config/config.php;
          find $$backup_dir -iname "nc_data_backup_*.tar.gz" -mtime +$$RETENTION_DAYS -exec rm -rf {} \;
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Backup completed. Next backup in $$BACKUP_FREQUENCY.";
          sleep $$BACKUP_FREQUENCY;
        done
    deploy:
      restart_policy:
        condition: on-failure
        delay: 600s

secrets:
  nextcloud_admin_user:
    external: true
  nextcloud_admin_password:
    external: true
  mariadb_db_database:
    external: true
  mariadb_db_user:
    external: true
  mariadb_db_password:
    external: true
      
networks:
  mariadb_network:
    external: true
    
  proxy_network:
    external: true

volumes:
  nextcloud_data:
    driver: local
    driver_opts:
      device: ${HOST_NEXTCLOUD_DATA}
      type: none
      o: bind

  nextcloud_storage:
    driver: local
    driver_opts:
      device: ${HOST_NEXTCLOUD_STORAGE}
      type: none
      o: bind

  nextcloud_backup:
    driver: local
    driver_opts:
      device: ${HOST_NEXTCLOUD_BACKUP}
      type: none
      o: bind