version: '3.8'

x-default-opts: &default-opts
  env_file:
    .env
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://172.17.0.1:12201"

services:
  agent:
    <<: *default-opts
    image: portainer/agent:${PORTAINER_TAG}
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.platform.os == linux

  portainer:
    <<: *default-opts
    image: portainer/portainer-ce:${PORTAINER_TAG}
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    networks:
      - agent_network
      - proxy_network
    volumes:
      - portainer_data:/data
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.role == manager
      labels:
        traefik.enable: "true"
        traefik.http.routers.portainer.entrypoints: ${ENTRYPOINT:-websecure}
        traefik.http.routers.portainer.rule: Host(`${DOMAIN:-portainer.localhost}`)
        traefik.http.routers.portainer.service: portainer
        traefik.http.services.portainer.loadbalancer.server.port: 9000

  backup:
    <<: *default-opts
    image: savagesoftware/portainer-backup:${PORTAINER_BACKUP_TAG}
    command: schedule
    networks:
      - agent_network
    environment:
      PORTAINER_BACKUP_SCHEDULE: 0 1 * * SUN
      PORTAINER_BACKUP_DIRECTORY: /backups
    volumes:
      - portainer_backups:/backups
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
        delay: 600s

networks:
  proxy_network:
    external: true
  agent_network:
    driver: overlay

volumes:
  portainer_data:
    driver: local
    driver_opts:
      device: ${HOST_PORTAINER_PATH}
      type: none
      o: bind
      # device: ":${HOST_PORTAINER_PATH?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1

  portainer_backups:
    driver: local
    driver_opts:
      device: ${HOST_BACKUP_PATH}
      type: none
      o: bind
      # device: ":${HOST_BACKUP_PATH?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1