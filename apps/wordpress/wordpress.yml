version: '3.8'

x-default-opts: &default-opts
  env_file:
    .env
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://127.0.0.1:12201"

services:
  wordpress:
    <<: *default-opts
    image: wordpress:${WORDPRESS_TAG}
    networks:
      - proxy_network
      - wp_network
    volumes:
      - wordpress_data:/var/www/html
    environment:
      - WORDPRESS_DB_HOST=wordpress-db
      - WORDPRESS_DB_NAME=${DB_NAME}
      - WORDPRESS_DB_USER=${DB_USER}
      - WORDPRESS_DB_PASSWORD=${DB_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "true"
        traefik.http.routers.wordpress.entrypoints: ${ENTRYPOINT:-websecure}
        traefik.http.routers.wordpress.rule: Host(`${DOMAIN?Variable not set}`)
        traefik.http.routers.wordpress.service: wordpress
        traefik.http.services.wordpress.loadbalancer.server.port: 80

  wordpress-db:
    <<: *default-opts
    image: mariadb:${MARIADB_TAG}
    networks:
      - wp_network
    volumes:
      - wordpress_db:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  wordpress-backup:
    <<: *default-opts
    image: mariadb:${MARIADB_TAG}
    command: 
      - sh
      - -c
      - | 
        while true; do
          sleep $$BACKUP_FREQUENCY;
          backup_dir=/backup/wordpress_$$(date +'%Y%m%d_%H%M%S');
          mkdir -p $$backup_dir/data;
          echo "[$$(date +'%Y-%m-%d %H:%M:%S')] Creating backup of WordPress data including SQL dump of $$DB_NAME database...";
          /usr/bin/mysqldump -u $$DB_USER --password=$$DB_PASSWORD --host=wordpress-db --databases $$DB_NAME --no-tablespaces > $$backup_dir/db.sql;
          cp -r /data/* $$backup_dir/data/.;
          find /backup/wordpress_* -mtime +$$RETENTION_DAYS -exec rm -rf {} \;
        done
    volumes:
      - wordpress_backup:/backup
      - wordpress_data:/data
    networks:
      - wp_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 600s

networks:
  proxy_network:
    external: true
    
  wp_network:
    driver: overlay

volumes:
  wordpress_data:
    driver: local
    driver_opts:
      device: ${HOST_WORDPRESS_DATA}
      type: none
      o: bind
      # device: ":${HOST_WORDPRESS_DATA?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1

  wordpress_db:
    driver: local
    driver_opts:
      device: ${HOST_WORDPRESS_DB}
      type: none
      o: bind
      # device: ":${HOST_WORDPRESS_DB?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1

  wordpress_backup:
    driver: local
    driver_opts:
      device: ${HOST_WORDPRESS_BACKUP}
      type: none
      o: bind
      # device: ":${HOST_WORDPRESS_BACKUP?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1