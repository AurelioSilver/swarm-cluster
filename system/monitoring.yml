version: '3.9'

x-default-opts: &default-opts
  env_file:
    .env
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://127.0.0.1:12201"

services:
  prometheus:
    <<: *default-opts
    image: prom/prometheus:${PROMETHEUS_TAG}
    volumes:
      - prometheus_data:/etc/prometheus
    networks:
      - metrics_network
      - proxy_network
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.prometheus.entrypoints: ${PROMETHEUS_ENTRYPOINT:-websecure}
        traefik.http.routers.prometheus.rule: Host(`${PROMETHEUS_DOMAIN:-prometheus.localhost}`)
        traefik.http.routers.prometheus.service: prometheus
        traefik.http.services.prometheus.loadbalancer.server.port: 9090

  grafana:
    <<: *default-opts
    image: grafana/grafana-oss:${GRAFANA_TAG}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - metrics_network
      - proxy_network
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.grafana.entrypoints: ${GRAFANA_ENTRYPOINT:-websecure}
        traefik.http.routers.grafana.rule: Host(`${GRAFANA_DOMAIN:-grafana.localhost}`)
        traefik.http.routers.grafana.service: grafana
        traefik.http.services.grafana.loadbalancer.server.port: 3000

  alertmanager:
    <<: *default-opts
    image: prom/alertmanager:${ALERTMANAGER_TAG}
    volumes:
      - alertmanager_data:/etc/alertmanager
    networks:
      - metrics_network
      - proxy_network
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.alertmanager.entrypoints: ${ALERTMANAGER_ENTRYPOINT:-websecure}
        traefik.http.routers.alertmanager.rule: Host(`${ALERTMANAGER_DOMAIN:-alertmanager.localhost}`)
        traefik.http.routers.alertmanager.service: alertmanager
        traefik.http.services.alertmanager.loadbalancer.server.port: 9093

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_TAG}
    networks:
      - metrics_network
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename:ro
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  metrics_network:
    external: true

  proxy_network:
    external: true

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      device: ${HOST_PROMETHEUS_DATA}
      type: none
      o: bind
      # device: ":${HOST_PROMETHEUS_DATA?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1

  alertmanager_data:
    driver: local
    driver_opts:
      device: ${HOST_ALERTMANAGER_DATA}
      type: none
      o: bind
      # device: ":${HOST_ALERTMANAGER_DATA?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1

  grafana_data:
    driver: local
    driver_opts:
      device: ${HOST_GRAFANA_DATA}
      type: none
      o: bind
      # device: ":${HOST_GRAFANA_DATA?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1