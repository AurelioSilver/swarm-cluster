version: '3.8'

x-default-opts: &default-opts
  logging:
    options:
      max-size: "1m"
    # driver: "gelf"
    # options:
    #   gelf-address: "udp://127.0.0.1:12201"

services:
  reverse-proxy:
    <<: *default-opts
    image: traefik:${TRAEFIK_TAG}
    command: 
      - --log
      - --log.level=INFO
      - --log.filePath=/data/traefik.log
      - --accesslog
      - --accesslog.filePath=/data/access.log

      # Dashboard config
      - --api.dashboard=true
      - --api.insecure=true

      # Provider configuration
      - --providers.docker.watch=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmModeRefreshSeconds=15
      - --providers.docker.network=proxy_network
      - --providers.docker.endpoint=unix:///var/run/docker.sock

      - --providers.file.watch=true
      - --providers.file.filename=/data/dynamic.yml

      # CertificateResolvers
      ## LetsEncrypt
      # - --certificatesResolvers.letsencrypt.acme.email=${LE_ACME_EMAIL?Variable not set}
      # - --certificatesResolvers.letsencrypt.acme.storage=/data/acme.json
      # - --certificatesResolvers.letsencrypt.acme.keyType=EC384
      # - --certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web

      ## DNS Challenge (Linode)
      # - --certificatesResolvers.linode-dnschallenge.acme.dnschallenge=true
      # - --certificatesResolvers.linode-dnschallenge.acme.dnschallenge.provider=linode
      # - --certificatesResolvers.linode-dnschallenge.acme.email=${DNS_ACME_EMAIL?Variable not set}
      # - --certificatesResolvers.linode-dnschallenge.acme.storage=/data/acme.json

      # Entry points configuration
      ## web and websecure
      - --entryPoints.web.address=:80
      ## https redirection and configuration
      # - --entryPoints.web.http.redirections.entryPoint.to=websecure
      # - --entryPoints.web.http.redirections.entryPoint.scheme=https
      # - --entryPoints.web.http.redirections.entrypoint.permanent=true

      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http.middlewares=secureHeaders@file

      # Certificate configuration
      ## LetsEncrypt
      # - --entryPoints.websecure.http.tls.certResolver=letsencrypt

      ## DNS Challenge (Linode)
      # - --entryPoints.websecure.http.tls.certResolver=linode-dnschallenge
      # - --entryPoints.websecure.http.tls.domains[0].main=${EXTERNAL_DOMAIN?Variable not set}
      # - --entryPoints.websecure.http.tls.domains[0].sans=*.${EXTERNAL_DOMAIN?Variable not set}
      # - --entryPoints.websecure.http.tls.domains[1].main=${INTERNAL_DOMAIN?Variable not set}
      # - --entryPoints.websecure.http.tls.domains[1].sans=*.${INTERNAL_DOMAIN?Variable not set}

      # Prometheus configuration
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.entryPoint=metrics
      - --entryPoints.metrics.address=:8082
    # secrets:
    #   - linode_dns_token
    # environment:
    #   - LINODE_TOKEN_FILE=/run/secrets/linode_dns_token
    networks:
      - proxy_network
      - metrics_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - traefik_data:/data
    ports:
      - "80:80"
      - "443:443"
    deploy:
      placement:
        constraints: 
          - node.role == manager
      update_config:
        delay: 10s
        order: start-first
        parallelism: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.traefik.entrypoints: ${TRAEFIK_ENTRYPOINT:-websecure}
        traefik.http.routers.traefik.rule: Host(`${TRAEFIK_DOMAIN:-traefik.localhost}`)
        traefik.http.routers.traefik.service: traefik
        traefik.http.services.traefik.loadbalancer.server.port: 8080

networks:
  proxy_network:
    external: true

  metrics_network:
    external: true

# secrets:
#   linode_dns_token:
#     external: true

volumes:
  traefik_data:
    driver: local
    driver_opts:
      device: ${HOST_TRAEFIK_PATH}
      type: none
      o: bind
      # device: ":${HOST_TRAEFIK_PATH?Variable not set}"
      # type: nfs
      # o: addr=${NFS_SHARE_IP?Variable not set},rw,sync,nfsvers=4.1